name: Django-app workflow

on: [push]
jobs:

  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install dependencies
      run: | 
        # обновление pip
        python -m pip install --upgrade pip 
        # установка flake8 и его плагинов
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r api_yamdb/requirements.txt 

    - name: Test with flake8 and pytests
      run: |
        # запуск проверки проекта по flake8
        python -m flake8 
        # перейти в папку,  содержащую manage.py — 
        #<корневая_папка_infra_actions>/<папка_проекта>/manage.py
        # cd infra_project/
        # запустить написанные разработчиком тесты
        pytest

  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      needs: tests
      steps:
        - name: Check out the repo
          # Проверка доступности репозитория Docker Hub для workflow
          uses: actions/checkout@v3 
        - name: Set up Docker Buildx
          # Вызов сборщика контейнеров docker
          uses: docker/setup-buildx-action@v1 
        - name: Login to Docker 
          # Запуск скрипта авторизации на Docker Hub
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to Docker Hub
          # Пуш образа в Docker Hub
          uses: docker/build-push-action@v2 
          with:
            push: true
            tags: wenerikk/yamdb_final:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        # passphrase: ${{ secrets.PASSPHRASE }} 
        # Если ваш ssh-ключ защищён фразой-паролем
        script: |
          # Остановим все работающие сервисы и удалим контейнеры
          sudo docker-compose down -v
          # Удалим существующий образ докерфайла
          sudo docker image rm wenerikk/yamdb_final
          # sudo docker run --rm -d -p 5000:5000 wenerikk/yamdb_final
          sudo docker-compose up -d
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
